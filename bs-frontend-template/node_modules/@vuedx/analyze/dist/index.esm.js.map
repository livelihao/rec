{"version":3,"file":"index.esm.js","sources":["../src/component.ts","../src/analyzer.ts","../src/types.ts","../src/utilities.ts","../src/analyzers/ScriptBlockAnalyzer.ts","../src/analyzers/ScriptIdentifierSourceAnalyzer.ts","../src/analyzers/ScriptOptionsComponentsAnalyzer.ts","../src/analyzers/babel-helpers.ts","../src/analyzers/ScriptOptionsEmitsAnalyzer.ts","../src/analyzers/ScriptOptionsPropsAnalyzer.ts","../src/analyzers/ScriptOptionsSetupAnalyzer.ts","../src/analyzers/TemplateBlockAnalyzer.ts","../src/output/vetur.ts","../src/output/web-types.ts","../src/project/detector/components.ts","../src/project/detector/require.ts","../src/project/VueProject.ts","../src/project/ConfiguredVueProject.ts","../src/project/InferredVueProject.ts","../src/transforms.ts","../src/index.ts"],"sourcesContent":["import { getComponentName, getComponentNameAliases, isPascalCase, kebabCase } from '@vuedx/shared'\n\n/* eslint-disable @typescript-eslint/method-signature-style */\nexport interface SourceLocation {\n  offset: number\n  line: number\n  column: number\n}\n\nexport interface SourceRange {\n  source: string\n  start: SourceLocation\n  end: SourceLocation\n}\n\nexport interface Addressable {\n  loc: SourceRange\n}\n\nexport interface ImportSource {\n  moduleName: string\n  exportName?: string\n  localName: string\n}\n\nexport interface ImportSourceWithLocation extends ImportSource, Addressable {}\n\nexport interface ComponentRegistrationInfo {\n  name: string\n  aliases: string[]\n  source: ImportSource\n}\n\nexport interface DirectiveRegistrationInfo {\n  name: string\n  source: ImportSource\n}\n\nexport interface LocalComponentRegistrationInfo\n  extends ComponentRegistrationInfo,\n    Addressable {\n  kind: 'script' | 'scriptSetup'\n  source: ImportSourceWithLocation\n}\n\nexport type TypeInfo =\n  | {\n      kind: 'string' | 'number' | 'boolean'\n    }\n  | {\n      kind: 'enum'\n      values: string[]\n    }\n  | {\n      kind: 'expression'\n      imports: ImportSource[]\n      expression: string\n    }\n\nexport type ValueInfo =\n  | {\n      kind: 'expression'\n      imports: ImportSource[]\n      expression: string\n    }\n  | {\n      kind: 'function'\n      expression: string\n    }\n  | {\n      kind: 'value'\n      value: string\n    }\n\nexport interface TagInfo {\n  title: string\n  content: string\n}\n\nexport interface Taggable {\n  tags: TagInfo[]\n}\n\nexport interface PropInfo extends Taggable, Addressable {\n  name: string\n  description: string\n  required: boolean\n  type: TypeInfo[]\n  defaultValue: ValueInfo | null\n}\n\nexport interface EmitInfo extends Taggable, Addressable {\n  name: string\n  description: string\n  type: TypeInfo[]\n  references: SourceRange[]\n  isInferred: boolean\n  isDynamic: boolean\n}\n\nexport interface SyntaxError {\n  message: string\n  loc: SourceLocation\n}\n\nexport interface IdentifierSource extends Addressable {\n  name: string\n}\n\nexport interface ComponentInfo extends Taggable {\n  name: string\n  aliases: string[]\n  fileName: string\n  description: string\n  components: LocalComponentRegistrationInfo[]\n  props: PropInfo[]\n  emits: EmitInfo[]\n  options?: ComponentOptionsInfo\n  fnSetupOption?: SetupInfo\n  scriptSetup?: ScriptSetupInfo\n  identifierSource: Record<string, IdentifierSource>\n  errors: SyntaxError[]\n}\n\nexport interface ComponentOptionsInfo extends Addressable {\n  properties: Record<string, Addressable>\n}\n\nexport interface SetupInfo extends Addressable {\n  props?: { identifiers: string[]; rest?: string } & Addressable\n  context?: {\n    identifiers: Partial<{ attrs: string; slots: string; emit: string }>\n    rest?: string\n  } & Addressable\n  return?: Addressable\n}\n\nexport interface ScriptSetupInfo {\n  defineProps?: Addressable\n  defineEmit?: Addressable\n}\n\nexport interface ComponentInfoFactory {\n  addError: (message: string, loc: SourceLocation) => ComponentInfoFactory\n  addProp: (name: string, options?: Partial<PropInfo>) => ComponentInfoFactory\n  addEmit: (name: string, options?: Partial<EmitInfo>) => ComponentInfoFactory\n  addLocalComponent: (\n    name: string,\n    source: ImportSourceWithLocation,\n    loc?: SourceRange,\n  ) => ComponentInfoFactory\n  addOption: (name: string, address: Addressable) => ComponentInfoFactory\n  addSetup(name: '', info: Addressable): ComponentInfoFactory\n  addSetup<K extends Exclude<keyof SetupInfo, 'loc'>>(\n    name: K,\n    info: SetupInfo[K],\n  ): ComponentInfoFactory\n  addScriptSetup: (\n    name: keyof ScriptSetupInfo,\n    address: Addressable,\n  ) => ComponentInfoFactory\n  info: () => ComponentInfo\n  addIdentifier: (id: string, source: string, loc: SourceRange) => void\n}\n\nexport function createComponentInfoFactory(\n  fileName: string,\n): ComponentInfoFactory {\n  const component: ComponentInfo = {\n    name: getComponentName(fileName),\n    aliases: getComponentNameAliases(fileName),\n    fileName,\n    description: '',\n    tags: [],\n    props: [],\n    emits: [],\n    components: [],\n    errors: [],\n    identifierSource: {},\n  }\n\n  const factory: ComponentInfoFactory = {\n    addError(message, loc) {\n      component.errors.push({ message, loc })\n\n      return factory\n    },\n    addIdentifier(id, name, loc) {\n      // TODO: Add error handling here\n      component.identifierSource[id] = { name, loc }\n    },\n    addProp(name, options = {}) {\n      const index = component.props.findIndex((prop) => prop.name === name)\n\n      if (options.loc != null) {\n        factory.addIdentifier(name, 'props', options.loc)\n      }\n\n      if (index >= 0) {\n        const prop = component.props[index]\n\n        Object.assign(prop, { name, ...options })\n      } else {\n        component.props.push({\n          name,\n          tags: [],\n          description: '',\n          required: false,\n          type: [{ kind: 'expression', imports: [], expression: 'any' }],\n          defaultValue: null,\n          loc: null as any,\n          ...options,\n        })\n      }\n\n      return factory\n    },\n    addEmit(name, options = {}) {\n      const index = component.emits.findIndex((emit) => emit.name === name)\n\n      if (index >= 0) {\n        const emit = component.emits[index]\n\n        if (options.isInferred === true) {\n          if (options.loc != null) {\n            options.references = emit.references\n            options.references.push(options.loc)\n          }\n\n          if (options.type != null) {\n            const expressions = new Set(\n              options.type.map((type) =>\n                type.kind === 'expression' ? type.expression : '',\n              ),\n            )\n\n            emit.type.forEach((type) => {\n              if (type.kind === 'expression') {\n                if (!expressions.has(type.kind)) {\n                  options.type?.push(type)\n                }\n              }\n            })\n          }\n        }\n\n        Object.assign(emit, { name, ...options })\n      } else {\n        component.emits.push({\n          name,\n          tags: [],\n          description: '',\n          type: [\n            {\n              kind: 'expression',\n              imports: [],\n              expression: '(event?: any) => void',\n            },\n          ],\n          loc: null as any,\n          references:\n            options.isInferred === true && options.loc != null\n              ? [options.loc]\n              : [],\n          isInferred: false,\n          isDynamic: false,\n          ...options,\n        })\n      }\n\n      return factory\n    },\n    addLocalComponent(\n      name,\n      source,\n      loc = null as any,\n      kind: LocalComponentRegistrationInfo['kind'] = 'script',\n    ) {\n      const aliases = isPascalCase(name) ? [name, kebabCase(name)] : [name]\n      component.components.push({ name, aliases, kind, source, loc })\n\n      return factory\n    },\n    addOption(name, address) {\n      if (name === '') {\n        component.options = {\n          properties: {},\n          ...component.options,\n          ...address,\n        }\n      } else {\n        if (component.options == null)\n          throw new Error('Cannot set option location without setting options')\n        component.options.properties[name] = address\n      }\n\n      return factory\n    },\n    addSetup(name: any, address: any) {\n      if (name === '') {\n        component.fnSetupOption = {\n          ...address,\n        }\n      } else {\n        if (component.fnSetupOption == null)\n          throw new Error(\n            'Cannot set setup params location without setting setup',\n          )\n        component.fnSetupOption[name as keyof SetupInfo] = address\n      }\n\n      return factory\n    },\n    addScriptSetup(name, address) {\n      if (component.scriptSetup == null) {\n        component.scriptSetup = {}\n      }\n\n      component.scriptSetup[name] = address\n\n      return factory\n    },\n    info() {\n      return component\n    },\n  }\n\n  return factory\n}\n","import { parse, SFCBlock, SFCParseOptions } from '@vuedx/compiler-sfc'\nimport Path from 'path'\nimport { ComponentInfo, createComponentInfoFactory } from './component'\nimport { Context, Plugin } from './types'\n\nconst parsers: Context['parsers'] = {\n  sfc: {\n    sourceMap: false,\n    pad: 'space',\n  },\n\n  babel: {\n    sourceType: 'module',\n    plugins: [\n      'bigInt',\n      'optionalChaining',\n      'optionalCatchBinding',\n      'nullishCoalescingOperator',\n      'objectRestSpread',\n    ],\n  },\n}\n\nexport interface Analyzer {\n  analyze(content: string, fileName?: string): ComponentInfo\n  analyzeScript(\n    content: string,\n    fileName?: string,\n    mode?: 'script' | 'scriptSetup',\n  ): ComponentInfo\n  analyzeTemplate(content: string, fileName?: string): ComponentInfo\n}\n\nexport function createAnalyzer(\n  plugins: Plugin[],\n  options: Partial<Context['parsers']> = {},\n): Analyzer {\n  function createContext(\n    fileName: string,\n    content: string,\n    localOptions: SFCParseOptions,\n  ): Context {\n    const { descriptor } = parse(content, {\n      ...parsers.sfc,\n      ...options.sfc,\n      ...localOptions,\n      filename: fileName,\n    })\n\n    return {\n      fileName,\n      component: createComponentInfoFactory(fileName),\n      descriptor,\n      plugins,\n      parsers: {\n        sfc: { ...parsers.sfc, ...options.sfc, ...localOptions },\n        babel: { ...parsers.babel, ...options.babel },\n      },\n    }\n  }\n\n  function analyze(\n    content: string,\n    fileName: string = 'anonymous.vue',\n  ): ComponentInfo {\n    const context = createContext(fileName, content, {})\n\n    processSFC(context)\n\n    return context.component.info()\n  }\n\n  function analyzeBlockText(\n    content: string,\n    fileName: string = 'anonymous.vue',\n  ): ComponentInfo {\n    const context = createContext(fileName, content, {})\n\n    processSFC(context)\n\n    return context.component.info()\n  }\n\n  function analyzeScript(\n    content: string,\n    fileName: string = 'anonymous.js',\n    mode: 'script' | 'scriptSetup' = 'script',\n  ): ComponentInfo {\n    const ext = Path.posix.extname(fileName)\n    return analyzeBlockText(\n      `<script lang=\"${ext.substr(1)}\" ${\n        mode === 'scriptSetup' ? 'setup' : ''\n      }>${content}</script>`,\n      fileName.substr(0, fileName.length - ext.length) + '.vue',\n    )\n  }\n\n  function analyzeTemplate(\n    content: string,\n    fileName: string = 'anonymous.html',\n  ): ComponentInfo {\n    const ext = Path.posix.extname(fileName)\n    return analyzeBlockText(\n      `<template>${content}</template>`,\n      fileName.substr(0, fileName.length - ext.length) + '.vue',\n    )\n  }\n\n  return { analyze, analyzeScript, analyzeTemplate }\n}\n\nfunction processSFC(context: Context): void {\n  const {\n    script,\n    scriptSetup,\n    template,\n    styles,\n    customBlocks,\n  } = context.descriptor\n\n  function call<T extends SFCBlock>(block: T): void {\n    const kind = block.type\n    context.plugins.forEach(({ blocks }) => {\n      if (blocks != null && kind in blocks) {\n        blocks[kind](block, context)\n      }\n    })\n  }\n\n  if (scriptSetup != null) call(scriptSetup)\n  else if (script != null) call(script)\n  if (template != null) call(template)\n  styles.forEach(call)\n  customBlocks.forEach((block) => call(block))\n}\n","import type { ParserOptions } from '@babel/parser'\nimport type { NodePath } from '@babel/traverse'\nimport type {\n  ArrowFunctionExpression,\n  File,\n  FunctionExpression,\n  Node,\n  ObjectExpression,\n  ObjectMember,\n  ObjectMethod,\n} from '@babel/types'\nimport type {\n  SFCBlock,\n  SFCDescriptor,\n  SFCParseOptions,\n  SFCScriptBlock,\n  SFCStyleBlock,\n  SFCTemplateBlock,\n} from '@vuedx/compiler-sfc'\nimport type { SourceFile, TypeChecker } from 'typescript'\nimport type { ComponentInfoFactory } from './component'\n\nexport interface Context {\n  fileName: string\n  component: ComponentInfoFactory\n  descriptor: SFCDescriptor\n\n  plugins: Plugin[]\n\n  parsers: {\n    sfc: SFCParseOptions\n    babel: ParserOptions\n    typescript?: (\n      fileName: string,\n      source: string,\n      options: {\n        language: 'js' | 'jsx' | 'ts' | 'tsx'\n      },\n    ) => {\n      ast: File\n      sourceFile: SourceFile\n      typeChecker: TypeChecker\n    }\n  }\n}\n\nexport interface ScriptAnalyzerContext extends Context {\n  mode: 'module' | 'setup'\n  ast: File\n  source: string\n  sourceFile?: SourceFile\n  block: SFCScriptBlock\n}\n\nexport type ScriptAnalyzer = (ast: File, context: ScriptAnalyzerContext) => void\n\ntype AbstractScriptAnalyzerFn<T extends Node = Node> = (\n  node: NodePath<T>,\n  context: ScriptAnalyzerContext,\n) => void\n\ninterface AbstractAnalyzerHandler<T extends Node = Node> {\n  enter: (node: NodePath<T>, context: ScriptAnalyzerContext) => void\n  exit: (node: NodePath<T>, context: ScriptAnalyzerContext) => void\n}\n\nexport type ComponentDeclarationAnalyzer = AbstractScriptAnalyzerFn\nexport type ComponentOptionsAnalyzer = AbstractScriptAnalyzerFn<\n  ObjectExpression\n>\nexport type ComponentSetupFnAnalyzer = AbstractScriptAnalyzerFn<\n  FunctionExpression | ArrowFunctionExpression | ObjectMethod\n>\n\nexport type BlockAnalyzer<T extends SFCBlock = SFCBlock> = (\n  block: T,\n  context: Context,\n) => void\n\nexport interface Plugin {\n  babel?: AbstractScriptAnalyzerFn | AbstractAnalyzerHandler\n  setup?: ComponentSetupFnAnalyzer[]\n  templateExpression?: (node: File, context: Context) => void\n  options?:\n    | ComponentOptionsAnalyzer[]\n    | Record<string, AbstractScriptAnalyzerFn<ObjectMember>>\n  declaration?: ComponentDeclarationAnalyzer[]\n  blocks?: Partial<{\n    script: BlockAnalyzer<SFCScriptBlock>\n    template: BlockAnalyzer<SFCTemplateBlock>\n    style: BlockAnalyzer<SFCStyleBlock>\n  }> &\n    Record<string, BlockAnalyzer<any>>\n}\n\nexport function createPlugin(options: Plugin): Plugin {\n  return options\n}\n","import { Node } from '@babel/types'\nimport { SourceRange } from './component'\nimport { Context, ScriptAnalyzerContext } from './types'\n\nexport function createSourceRange(\n  context: Context | ScriptAnalyzerContext,\n  node: Node,\n): SourceRange {\n  if (node.start == null || node.end == null || node.loc == null) {\n    return {\n      source: '',\n      start: { offset: 0, line: 0, column: 0 },\n      end: { offset: 0, line: 0, column: 0 },\n    }\n  } else {\n    const source =\n      'source' in context ? context.source : context.descriptor.source\n\n    return {\n      source: source.substring(node.start, node.end),\n      start: {\n        offset: node.start,\n        line: node.loc.start.line,\n        column: node.loc.start.column,\n      },\n      end: {\n        offset: node.end,\n        line: node.loc.end.line,\n        column: node.loc.end.column,\n      },\n    }\n  }\n}\n","import { parse } from '@babel/parser'\nimport traverse, { NodePath } from '@babel/traverse'\nimport type * as t from '@babel/types'\nimport { isIdentifier, traverseFast } from '@babel/types'\nimport { SFCScriptBlock } from '@vuedx/compiler-sfc'\nimport type { SourceFile } from 'typescript'\nimport { Context, createPlugin, ScriptAnalyzerContext } from '../types'\nimport { createSourceRange } from '../utilities'\nimport { isNotNull } from '@vuedx/shared'\n\nexport const ScriptBlockAnalyzer = createPlugin({\n  blocks: {\n    script: (block, ctx) => {\n      if (block.src == null) {\n        try {\n          processScript(createScriptContext(block.content, ctx, block))\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    },\n  },\n})\n\nexport function createScriptContext(\n  content: string,\n  context: Context,\n  block?: SFCScriptBlock,\n): ScriptAnalyzerContext {\n  const script = block ?? {\n    type: 'script',\n    content: content,\n    setup: false,\n    attrs: {},\n    // TODO: Create loc object as if javascript file.\n    loc: {\n      start: { offset: 0, line: 1, column: 1 },\n      end: { offset: 0, line: 1, column: 1 },\n      source: content,\n    },\n  }\n\n  const { ast } = parseJS(context, content, script.lang === 'ts')\n\n  return {\n    ...context,\n    mode: script.setup != null ? 'setup' : 'module',\n    ast: ast,\n    source: content,\n    block: script,\n  }\n}\n\nexport function parseJS(\n  context: Context,\n  content: string,\n  enableTS: boolean,\n  offset: number = 0,\n): {\n  ast: t.File\n  sourceFile?: SourceFile\n} {\n  let result: { ast: t.File; sourceFile?: SourceFile }\n  if (context.parsers.typescript != null) {\n    result = context.parsers.typescript(context.fileName, content, {\n      language: enableTS ? 'ts' : 'js',\n    })\n  } else {\n    const plugins = context.parsers.babel.plugins?.slice() ?? []\n    if (enableTS && !plugins.includes('typescript')) {\n      plugins.push('typescript')\n    }\n\n    const ast = parse(content, {\n      ...context.parsers.babel,\n      plugins: Array.from(new Set(plugins)),\n      ranges: true,\n      // @ts-expect-error\n      errorRecovery: true,\n    })\n    result = { ast }\n  }\n\n  if (offset !== 0 && Number.isInteger(offset)) {\n    traverseFast(result.ast, (node) => {\n      const n = node as { start: number; end: number }\n\n      n.start += offset\n      n.end += offset\n    })\n  }\n\n  return result\n}\n\nfunction processScript(context: ScriptAnalyzerContext): void {\n  // @ts-expect-error\n  if ((context.ast.errors?.length ?? 0) > 0) {\n    // @ts-expect-error\n    context.ast.errors.forEach((error: any) =>\n      context.component.addError(error.message, {\n        ...error.loc,\n        offset: error.pos,\n      }),\n    )\n    return\n  }\n\n  const enterHandlers = context.plugins\n    .map((plugin) => {\n      if (plugin.babel != null) {\n        if (typeof plugin.babel === 'function') {\n          return plugin.babel\n        } else if ('enter' in plugin.babel) {\n          return plugin.babel.enter\n        }\n      }\n    })\n    .filter(isNotNull)\n\n  const exitHandlers = context.plugins\n    .map((plugin) => {\n      if (plugin.babel != null && 'exit' in plugin.babel) {\n        return plugin.babel.exit\n      }\n    })\n    .filter(isNotNull)\n\n  const setupHandlers = context.plugins\n    .map((plugin) => plugin.setup)\n    .filter(isNotNull)\n    .flat()\n  const optionsHandlers = context.plugins\n    .map((plugin) => (Array.isArray(plugin.options) ? plugin.options : null))\n    .filter(isNotNull)\n    .flat()\n  const optionsByNameHandlers = context.plugins\n    .map((plugin) => (Array.isArray(plugin.options) ? null : plugin.options))\n    .filter(isNotNull)\n  const declarationHandlers = context.plugins\n    .map((plugin) => plugin.declaration)\n    .filter(isNotNull)\n    .flat()\n\n  function call<T>(\n    fns: Array<(node: T, context: ScriptAnalyzerContext) => void>,\n    node: T,\n  ): void {\n    fns.forEach((fn) => {\n      try {\n        fn(node, context)\n      } catch (error) {\n        console.error(error)\n        // TODO: Handle error.\n      }\n    })\n  }\n\n  function processOptions(options$: NodePath<t.ObjectExpression>): void {\n    const properties$ = options$.get('properties')\n    context.component.addOption('', {\n      loc: createSourceRange(context, options$.node),\n    })\n    properties$.forEach((property$) => {\n      if (property$.isObjectMember()) {\n        const { key } = property$.node\n\n        if (isIdentifier(key)) {\n          const name = key.name\n          context.component.addOption(name, {\n            loc: createSourceRange(\n              context,\n              property$.isObjectProperty()\n                ? property$.node.value\n                : property$.node,\n            ),\n          })\n\n          optionsByNameHandlers.forEach((options) => {\n            const fn = options[name] as any\n\n            if (fn != null) {\n              try {\n                fn(property$, context)\n              } catch (error) {\n                console.error(error)\n                // TODO: Handler error.\n              }\n            }\n          })\n\n          if (name === 'setup') {\n            if (property$.isObjectMethod()) {\n              context.component.addSetup('', {\n                loc: createSourceRange(context, property$.node),\n              })\n              call(setupHandlers, property$ as any)\n            } else if (property$.isObjectProperty()) {\n              const value$ = property$.get('value') as NodePath\n\n              if (\n                value$.isFunctionExpression() ||\n                value$.isArrowFunctionExpression()\n              ) {\n                context.component.addSetup('', {\n                  loc: createSourceRange(context, value$.node),\n                })\n                call(setupHandlers, value$ as any)\n              }\n            }\n          }\n        }\n      }\n    })\n  }\n\n  traverse(context.ast, {\n    enter(path: NodePath<t.Node>) {\n      call(enterHandlers, path)\n    },\n    exit(path: NodePath<t.Node>) {\n      call(exitHandlers, path)\n    },\n    CallExpression(path: NodePath<t.CallExpression>) {\n      const callee$ = path.get('callee')\n      const args$ = path.get('arguments')\n\n      if (callee$.isIdentifier()) {\n        const options$ = args$[0]\n        if (callee$.node.name === 'defineProps') {\n          context.component.addScriptSetup('defineProps', {\n            loc: createSourceRange(context, path.node),\n          })\n          optionsByNameHandlers.forEach((handlers) => {\n            const fn = handlers.props\n            if (fn != null) {\n              try {\n                fn(options$ as any, context)\n              } catch (error) {\n                console.error(error)\n                // TODO: Handle error\n              }\n            }\n          })\n        } else if (callee$.node.name === 'defineEmit') {\n          context.component.addScriptSetup('defineEmit', {\n            loc: createSourceRange(context, path.node),\n          })\n          optionsByNameHandlers.forEach((handlers) => {\n            const fn = handlers.emits\n            if (fn != null) {\n              try {\n                fn(options$ as any, context)\n              } catch (error) {\n                console.error(error)\n                // TODO: Handle error\n              }\n            }\n          })\n        }\n      }\n    },\n    ExportDefaultDeclaration(path: NodePath<t.ExportDefaultDeclaration>) {\n      const d$ = path.get('declaration')\n      /**\n       * Matches:\n       * export default {}\n       */\n      if (d$.isObjectExpression()) {\n        const declaration$ = d$ as NodePath<t.ObjectExpression>\n        call(declarationHandlers, declaration$ as NodePath<t.Node>)\n        call(optionsHandlers, declaration$)\n        processOptions(declaration$)\n      } else if (d$.isCallExpression()) {\n        const declaration$ = d$ as NodePath<t.CallExpression>\n        /**\n         * Matches:\n         * export default fn(...)\n         */\n        const { callee } = declaration$.node\n        const args$ = declaration$.get('arguments')\n        const options$ = ((Array.isArray(args$)\n          ? args$[0]\n          : args$) as unknown) as NodePath\n\n        /**\n         * Matches:\n         * export default defineComponent(...)\n         */\n        if (isIdentifier(callee) && callee.name === 'defineComponent') {\n          if (options$.isObjectExpression()) {\n            /**\n             * Matches:\n             * export default defineComponent({ ... })\n             */\n            call(declarationHandlers, declaration$ as any)\n            call(optionsHandlers, options$ as any)\n            processOptions(options$ as any)\n          } else if (\n            options$.isArrowFunctionExpression() ||\n            options$.isFunctionExpression()\n          ) {\n            context.component.addSetup('', {\n              loc: createSourceRange(context, options$.node),\n            })\n            /**\n             * Matches:\n             * export default defineComponent(() => {...})\n             * export default defineComponent(function setup() {...})\n             */\n            call(setupHandlers, options$ as any)\n          }\n        }\n      }\n    },\n  })\n}\n","import T from '@babel/types'\nimport { createPlugin, ScriptAnalyzerContext } from '../types'\nimport { createSourceRange } from '../utilities'\n\nexport const ScriptIdentifierSourceAnalyzer = createPlugin({\n  babel(node$, context) {\n    if (context.mode !== 'setup') return\n    const node = node$.node\n    if (T.isProgram(node)) {\n      const register = (node: T.Node, kind: string): void => {\n        if (T.isIdentifier(node)) {\n          context.component.addIdentifier(\n            node.name,\n            `scriptSetup:${kind}`,\n            createSourceRange(context, node),\n          )\n        } else if (T.isObjectPattern(node)) {\n          node.properties.forEach((property) => {\n            if (T.isObjectProperty(property)) {\n              register(property.key, kind)\n            } else {\n              register(property.argument, kind)\n            }\n          })\n        } else if (T.isArrayPattern(node)) {\n          node.elements.forEach((element) => {\n            if (T.isRestElement(element)) {\n              register(element.argument, kind)\n            } else if (T.isAssignmentPattern(element)) {\n              register(element.left, kind)\n            } else if (element != null) {\n              register(element, kind)\n            }\n          })\n        } else if (T.isMemberExpression(node)) {\n          register(node.object, kind)\n        }\n      }\n\n      const processStatement = (statement: T.Statement): void => {\n        if (T.isLabeledStatement(statement)) {\n          if (statement.label.name === 'ref') {\n            if (T.isExpressionStatement(statement.body)) {\n              if (T.isAssignmentExpression(statement.body.expression)) {\n                register(statement.body.expression.left, 'refLabel')\n              }\n            }\n          }\n        } else if (T.isVariableDeclaration(statement)) {\n          statement.declarations.forEach(({ id }) => {\n            register(id, 'value')\n          })\n        } else if (T.isFunctionDeclaration(statement)) {\n          if (statement.id != null) {\n            register(statement.id, 'function')\n          }\n        }\n      }\n\n      node.body.forEach(processStatement)\n    }\n  },\n  options: {\n    data(property$, context) {\n      setIdentifiersSource(property$.node, 'data', context)\n    },\n    setup(property$, context) {\n      setIdentifiersSource(property$.node, 'setup', context)\n    },\n    computed(property$, context) {\n      setIdentifiersSource(property$.node, 'computed', context)\n    },\n    methods(property$, context) {\n      setIdentifiersSource(property$.node, 'methods', context)\n    },\n    inject(property$, context) {\n      setIdentifiersSource(property$.node, 'inject', context, [\n        'object',\n        'array',\n      ])\n    },\n  },\n})\n\nfunction setIdentifiersSource(\n  node: T.ObjectMember,\n  source: string,\n  context: ScriptAnalyzerContext,\n  allowedTypes: Array<'object' | 'array'> = ['object'],\n): void {\n  const register = (obj?: T.Node): void => {\n    if (allowedTypes.includes('object') && T.isObjectExpression(obj)) {\n      obj.properties.forEach((property) => {\n        if (T.isObjectMember(property)) {\n          if (T.isIdentifier(property.key)) {\n            context.component.addIdentifier(\n              property.key.name,\n              source,\n              createSourceRange(context, property.key),\n            )\n          }\n        }\n      })\n    } else if (allowedTypes.includes('array') && T.isArrayExpression(obj)) {\n      obj.elements.forEach((element) => {\n        if (T.isStringLiteral(element)) {\n          context.component.addIdentifier(\n            element.value,\n            source,\n            createSourceRange(context, element),\n          )\n        }\n      })\n    }\n  }\n\n  if (T.isObjectProperty(node)) {\n    if (T.isObjectExpression(node.value) || T.isArrayExpression(node.value)) {\n      register(node.value)\n    } else if (\n      T.isFunctionExpression(node.value) ||\n      T.isArrowFunctionExpression(node.value)\n    ) {\n      register(getReturnExpression(node.value))\n    }\n  } else {\n    register(getReturnExpression(node))\n  }\n}\n\nfunction getReturnExpression(\n  node: T.FunctionExpression | T.ArrowFunctionExpression | T.ObjectMethod,\n): T.Expression | undefined {\n  if (T.isBlockStatement(node.body)) {\n    return (\n      node.body.body.find((node): node is T.ReturnStatement =>\n        T.isReturnStatement(node),\n      )?.argument ?? undefined\n    )\n  } else if (T.isExpression(node.body)) {\n    return node.body\n  }\n}\n","import { Binding, NodePath } from '@babel/traverse'\nimport {\n  ImportDeclaration,\n  isIdentifier,\n  isObjectExpression,\n  isObjectProperty,\n  isStringLiteral,\n  isExportSpecifier,\n  ObjectProperty,\n  ExportSpecifier,\n} from '@babel/types'\nimport { ImportSourceWithLocation } from '../component'\nimport { createPlugin, ScriptAnalyzerContext } from '../types'\nimport { createSourceRange } from '../utilities'\n\nexport const ComponentsOptionAnalyzer = createPlugin({\n  babel: (path$, ctx) => {\n    if (path$.isExportNamedDeclaration()) {\n      const node = path$.node\n      if (node.source?.value.endsWith('.vue') === true) {\n        const specifier = node.specifiers.find(\n          (specifier) =>\n            isExportSpecifier(specifier) &&\n            isIdentifier(specifier.local) &&\n            specifier.local.name === 'default',\n        ) as ExportSpecifier | undefined\n\n        if (specifier != null) {\n          const name = getComponentName(specifier.exported) as string\n\n          ctx.component.addLocalComponent(\n            name,\n            {\n              moduleName: node.source.value,\n              localName: name,\n              loc: createSourceRange(ctx, node),\n            },\n            createSourceRange(ctx, node),\n          )\n        }\n      }\n    }\n  },\n  options: {\n    components: (path$, ctx) => {\n      const property = path$.node\n      if (isObjectProperty(property)) {\n        const { value: components } = property\n        if (isObjectExpression(components)) {\n          components.properties.forEach((declaration) => {\n            if (isObjectProperty(declaration)) {\n              const name = getComponentName(declaration.key)\n              if (name != null) {\n                if (isIdentifier(declaration.value)) {\n                  const info = resolveComponentInformation(\n                    path$.scope.getBinding(declaration.value.name),\n                    ctx,\n                  )\n                  if (info != null) {\n                    ctx.component.addLocalComponent(\n                      name,\n                      info,\n                      createSourceRange(ctx, declaration),\n                    )\n                  }\n                }\n              }\n            }\n          })\n        }\n      }\n    },\n  },\n})\n\nfunction getComponentName(key: ObjectProperty['key']): string | undefined {\n  if (isIdentifier(key)) return key.name\n  if (isStringLiteral(key)) return key.value\n}\n\nfunction resolveComponentInformation(\n  binding: Binding | undefined,\n  context: ScriptAnalyzerContext,\n): ImportSourceWithLocation | undefined {\n  if (binding == null) return\n\n  switch (binding.kind) {\n    case 'module':\n      {\n        const path$ = (binding.path as unknown) as NodePath\n        if (path$.isImportDefaultSpecifier()) {\n          const node = path$.node\n          const parent = path$.parent as ImportDeclaration\n\n          return {\n            moduleName: parent.source.value,\n            localName: node.local.name,\n            loc: createSourceRange(context, parent),\n          }\n        } else if (path$.isImportSpecifier()) {\n          const node = path$.node\n          const parent = path$.parent as ImportDeclaration\n\n          return {\n            moduleName: parent.source.value,\n            exportName: isStringLiteral(node.imported)\n              ? node.imported.value\n              : node.imported.name,\n            localName: node.local.name,\n            loc: createSourceRange(context, parent),\n          }\n        }\n      }\n      break\n  }\n}\n","import generate from '@babel/generator'\nimport traverse, { NodePath } from '@babel/traverse'\nimport t, {\n  cloneNode,\n  isExportSpecifier,\n  isIdentifier,\n  isTSInterfaceDeclaration,\n  isTSTypeAliasDeclaration,\n  traverseFast,\n} from '@babel/types'\nimport { ImportSource } from '../component'\nimport { Context, ScriptAnalyzerContext } from '../types'\n\nexport function getTypeAnnotation(\n  node$:\n    | NodePath<t.TSTypeAnnotation>\n    | NodePath<t.TSAsExpression>\n    | NodePath<t.TSTypeAliasDeclaration>\n    | NodePath<t.TSInterfaceDeclaration>,\n  context: Context,\n): { type: string; imports: ImportSource[] } {\n  try {\n    const imports: ImportSource[] = []\n    const identifiers: Record<string, string[]> = {}\n    const processed = new Set<string>()\n    const collect = (name$: NodePath<t.Identifier>): void => {\n      const name = name$.node.name\n      if (processed.has(name)) return\n      const source = getIdentifierSource(name$, context)\n      const inline = source.filter(\n        (item) => typeof item === 'string',\n      ) as string[]\n      processed.add(name)\n      if (inline.length > 0) identifiers[name] = inline\n      source.forEach((item) => {\n        if (typeof item === 'object') {\n          imports.push(item)\n        }\n      })\n    }\n\n    traverse(\n      node$.node,\n      {\n        TSTypeReference(type$) {\n          const typeName$ = type$.get('typeName') as NodePath\n          if (typeName$.isIdentifier()) {\n            collect(typeName$)\n          } else if (typeName$.isTSQualifiedName()) {\n            const left$ = typeName$.get('left') as NodePath\n            if (left$.isIdentifier()) {\n              collect(left$)\n            }\n          }\n        },\n      },\n      node$.scope,\n      null,\n      node$.parentPath,\n    )\n\n    const node = cloneNode(\n      node$.isTSInterfaceDeclaration()\n        ? node$.node.body\n        : node$.node.typeAnnotation,\n    )\n\n    const knownImports = new Set(imports.map((i) => i.localName))\n    traverseFast(node, (node) => {\n      if (isIdentifier(node) && !knownImports.has(node.name)) {\n        const identifier = identifiers[node.name]\n        if (identifier != null) {\n          if (identifier.length === 1) {\n            node.name = `(${identifier[0]})`\n          } else if (identifier.length > 1) {\n            node.name = `(${identifier.map((id) => `(${id})`).join(' & ')})`\n          }\n        }\n      }\n    })\n    // TODO: Inline unresolved identifiers, before generating.\n    const type = stringifyBabelNode(node)\n\n    return { type, imports }\n  } catch (error) {\n    console.error(error)\n\n    return { type: 'any', imports: [] }\n  }\n}\n\nexport function stringifyBabelNode(node: t.Node): string {\n  return generate(node, {\n    sourceMaps: false,\n    concise: true,\n  }).code\n}\n\nfunction getIdentifierSource(\n  name$: NodePath<t.Identifier>,\n  context: Context| ScriptAnalyzerContext,\n): Array<ImportSource | string> {\n  const name = name$.node.name\n  const binding = name$.scope.getBinding(name)\n  const result: Array<ImportSource | string> = []\n  if (binding != null) {\n    const node$ = binding.path\n    if (node$.isImportDefaultSpecifier() || node$.isImportSpecifier()) {\n      const parent$ = node$.parentPath as NodePath<t.ImportDeclaration>\n      const statement = parent$.node\n      const moduleName = statement.source.value\n      const localName = name\n      const importSource: ImportSource = { moduleName, localName }\n      if (node$.isImportDefaultSpecifier()) {\n        result.push(importSource)\n      } else if (node$.isImportSpecifier()) {\n        const imported$ = node$.get('imported') as NodePath<\n          t.ImportSpecifier['imported']\n        >\n        importSource.exportName = imported$.isIdentifier()\n          ? imported$.node.name\n          : imported$.isStringLiteral()\n          ? imported$.node.value\n          : undefined // Should not ever happen.\n        result.push(importSource)\n      }\n    }\n  } else if ('ast' in context) {\n    traverse(context.ast, {\n      ExportNamedDeclaration(statement$) {\n        if (context.mode !== 'setup') {\n          const statement = statement$.node\n          if (statement.specifiers.length > 0) {\n            const specifier = statement.specifiers.find(\n              (specifier) =>\n                isExportSpecifier(specifier) &&\n                (isIdentifier(specifier.exported)\n                  ? specifier.exported.name === name\n                  : specifier.exported.value === name),\n            )\n\n            if (specifier != null) {\n              result.push({\n                moduleName: context.fileName,\n                localName: name,\n                exportName: name,\n              })\n            }\n          } else if (\n            isTSTypeAliasDeclaration(statement.declaration) ||\n            isTSInterfaceDeclaration(statement.declaration)\n          ) {\n            if (statement.declaration.id.name === name) {\n              result.push({\n                moduleName: context.fileName,\n                localName: name,\n                exportName: name,\n              })\n            }\n          }\n        }\n      },\n      TSTypeAliasDeclaration(statement$) {\n        if (statement$.node.id.name === name) {\n          if (statement$.node.typeParameters == null) {\n            // No generics.\n            const raw = getTypeAnnotation(statement$, context)\n\n            result.push(raw.type, ...raw.imports)\n          }\n        }\n      },\n      TSInterfaceDeclaration(statement$) {\n        if (statement$.node.id.name === name) {\n          if (statement$.node.typeParameters == null) {\n            // No generics\n            const raw = getTypeAnnotation(statement$, context)\n\n            result.push(raw.type, ...raw.imports)\n          }\n\n          // TODO: Handle extends\n        }\n      },\n    })\n  }\n\n  return result\n}\n\nexport function inferType(node$: NodePath): string {\n  if (node$.isStringLiteral()) {\n    return 'string'\n  } else if (node$.isNumericLiteral()) {\n    return 'number'\n  } else if (node$.isBooleanLiteral()) {\n    return 'boolean'\n  } else if (node$.isArrayExpression()) {\n    const elements$ = node$.get('elements') as NodePath[]\n    return `[${elements$.map(inferType).join(',')}]`\n  } else {\n    return 'any'\n  }\n}\n","import traverse, { NodePath } from '@babel/traverse'\nimport t, { isStringLiteral } from '@babel/types'\nimport { ImportSource, TypeInfo } from '../component'\nimport { Context, createPlugin, ScriptAnalyzerContext } from '../types'\nimport { createSourceRange } from '../utilities'\nimport {\n  getTypeAnnotation,\n  inferType,\n  stringifyBabelNode,\n} from './babel-helpers'\n\nexport const EmitsOptionsAnalyzer = createPlugin({\n  options: {\n    emits(node$, context) {\n      const emits$ = node$.isObjectProperty()\n        ? (node$.get('value') as NodePath<t.ObjectProperty['value']>)\n        : node$\n\n      if (emits$.isObjectExpression()) {\n        const properties$ = emits$.get('properties') as Array<\n          NodePath<t.ObjectMember>\n        >\n\n        properties$.forEach((property$) => {\n          const key$ = property$.get('key')\n\n          if (key$.isIdentifier()) {\n            const name = key$.node.name\n            context.component.addEmit(name, {\n              loc: createSourceRange(context, property$.node),\n            })\n\n            if (property$.isObjectMethod()) {\n              const params$ = property$.get('params') as NodePath[]\n              const type = getTypeInfo(params$, context)\n              if (type != null) context.component.addEmit(name, { type })\n            } else if (property$.isObjectProperty()) {\n              const value$ = property$.get('value') as NodePath\n\n              if (\n                value$.isFunctionExpression() ||\n                value$.isArrowFunctionExpression()\n              ) {\n                const params$ = value$.get('params') as NodePath[]\n                const type = getTypeInfo(params$, context)\n                if (type != null) context.component.addEmit(name, { type })\n              }\n            }\n          }\n        })\n      } else if (emits$.isArrayExpression()) {\n        emits$.node.elements.forEach((element) => {\n          if (isStringLiteral(element)) {\n            context.component.addEmit(element.value, {\n              loc: createSourceRange(context, element),\n            })\n          }\n        })\n      }\n    },\n  },\n})\n\nexport const ImplicitEmitsAnalyzer = createPlugin({\n  options: [\n    (node$: NodePath<t.ObjectExpression>, context: ScriptAnalyzerContext) => {\n      if (context.mode === 'setup') return // No $emit() in <script setup>\n      if (\n        node$.get('properties').some((property$) => {\n          if (property$.isObjectProperty()) {\n            const key$ = property$.get('key') as NodePath\n            if (key$.isIdentifier()) {\n              return key$.node.name === 'emits'\n            }\n          }\n        })\n      ) {\n        return // emits option is defined\n      }\n\n      processInferredEmits(node$ as NodePath, context)\n    },\n  ],\n  templateExpression: (node$, context) => {\n    const info = context.component.info() // script is already processed at this point\n\n    if (info.options?.properties.emits != null) return // Explicit emits\n    if (info.scriptSetup?.defineEmit != null) return // Explicit emits\n\n    processInferredEmits(node$, context, true)\n  },\n})\n\nexport function processInferredEmits(\n  node$: NodePath | t.File,\n  context: Context,\n  inTemplate: boolean = false,\n): void {\n  const { node, scope, parentPath } =\n    node$ instanceof NodePath ? node$ : ({ node: node$ } as any)\n  traverse(\n    node,\n    {\n      CallExpression(node$) {\n        const callee$ = node$.get('callee')\n        const args$ = node$.get('arguments') as NodePath[]\n        if (args$.length === 0) return\n        if (callee$.isMemberExpression()) {\n          const object$ = callee$.get('object') as NodePath<\n            t.MemberExpression['object']\n          >\n          const property$ = callee$.get('property') as NodePath<\n            t.MemberExpression['property']\n          >\n\n          if (\n            object$.isThisExpression() &&\n            property$.isIdentifier() &&\n            property$.node.name === '$emit'\n          ) {\n            // continue\n          } else {\n            return\n          }\n        } else if (\n          inTemplate &&\n          callee$.isIdentifier() &&\n          callee$.node.name === '$emit'\n        ) {\n          // continue\n        } else {\n          return\n        }\n\n        const event$ = (args$.shift() as unknown) as NodePath\n        const type = getTypeInfo(args$, context, false)\n        if (event$.isStringLiteral()) {\n          const name = event$.node.value\n          context.component.addEmit(name, {\n            loc: createSourceRange(context, node$.node),\n            type,\n            isInferred: true,\n          })\n        } else {\n          const name = stringifyBabelNode(event$.node)\n          context.component.addEmit(name, {\n            loc: createSourceRange(context, node$.node),\n            type,\n            isInferred: true,\n            isDynamic: true,\n          })\n        }\n      },\n    },\n    scope,\n    null,\n    parentPath,\n  )\n}\n\nfunction getTypeInfo(\n  params$: NodePath[],\n  context: Context | ScriptAnalyzerContext,\n  inFunctionParams: boolean = true,\n): TypeInfo[] | undefined {\n  if (params$.length === 0) {\n    return [{ kind: 'expression', imports: [], expression: '() => void' }]\n  } else {\n    const imports: ImportSource[] = []\n    const types = params$.map((param$, index) => {\n      let type = 'any'\n      if ('sourceFile' in context && context.sourceFile != null) {\n      }\n      const name =\n        inFunctionParams && param$.isIdentifier()\n          ? param$.node.name\n          : `arg${index}`\n      const optional = (param$.node as any).optional === true ? '?' : ''\n      if (param$.has('typeAnnotation')) {\n        const result = param$.isTSAsExpression()\n          ? getTypeAnnotation(param$, context)\n          : getTypeAnnotation(\n              param$.get('typeAnnotation') as NodePath<t.TSTypeAnnotation>,\n              context,\n            )\n\n        type = result.type\n        imports.push(...result.imports)\n      } else if (!inFunctionParams) {\n        type = inferType(param$)\n      }\n\n      return `${name}${optional}: ${type}`\n    })\n\n    const imported = new Set<string>()\n\n    return [\n      {\n        kind: 'expression',\n        imports: imports.filter((source) => {\n          try {\n            return !imported.has(source.localName)\n          } finally {\n            imported.add(source.localName)\n          }\n        }),\n        expression: `(${types.join(', ')}) => void`,\n      },\n    ]\n  }\n}\n","import generate from '@babel/generator'\nimport { NodePath } from '@babel/traverse'\nimport {\n  isBooleanLiteral,\n  isIdentifier,\n  isObjectProperty,\n  isStringLiteral,\n  ObjectMember,\n} from '@babel/types'\nimport { isNotNull } from '@vuedx/shared'\nimport { PropInfo, TypeInfo } from '../component'\nimport { createPlugin } from '../types'\nimport { createSourceRange } from '../utilities'\n\nexport const PropsOptionsAnalyzer = createPlugin({\n  options: {\n    props(property$, context) {\n      const props$ = property$.isObjectProperty()\n        ? (property$.get('value') as NodePath)\n        : property$\n\n      if (props$.isObjectExpression()) {\n        ;(props$.get('properties') as NodePath[]).forEach((property$) => {\n          if (property$.isObjectProperty()) {\n            const key$ = property$.get('key') as NodePath\n            const value$ = property$.get('value') as NodePath\n            if (key$.isIdentifier()) {\n              const name = key$.node.name\n              context.component.addProp(name, {\n                loc: createSourceRange(context, property$.node),\n              })\n\n              if (value$.isIdentifier()) {\n                const type = getTypeInfo(value$)\n                if (type != null) context.component.addProp(name, { type })\n              } else if (value$.isArrayExpression()) {\n                const type = getTypeInfo(value$)\n                if (type != null) context.component.addProp(name, { type })\n              } else if (value$.isObjectExpression()) {\n                const options = toObjectExpressionMap(value$)\n                const info: Partial<PropInfo> = {}\n\n                if (options.required != null) {\n                  const node = options.required.node\n                  info.required =\n                    isObjectProperty(node) &&\n                    isBooleanLiteral(node.value) &&\n                    node.value.value\n                }\n\n                if (options.type != null) {\n                  info.type = getTypeInfo(options.type.get('value') as NodePath)\n                }\n\n                context.component.addProp(name, info)\n              }\n            }\n          }\n        })\n      } else if (props$.isArrayExpression()) {\n        props$.node.elements.forEach((element) => {\n          if (isStringLiteral(element)) {\n            context.component.addProp(element.value, {\n              loc: createSourceRange(context, element),\n            })\n          }\n        })\n      }\n    },\n  },\n})\n\nfunction getTypeInfo(path$: NodePath): TypeInfo[] | undefined {\n  if (path$.isIdentifier()) {\n    switch (path$.node.name) {\n      case 'String':\n        return [{ kind: 'string' }]\n      case 'Number':\n        return [{ kind: 'number' }]\n      case 'Boolean':\n        return [{ kind: 'boolean' }]\n      case 'Object':\n      case 'Symbol':\n        return [\n          {\n            kind: 'expression',\n            imports: [],\n            expression: path$.node.name.toLowerCase(),\n          },\n        ]\n      case 'Array':\n        return [{ kind: 'expression', imports: [], expression: 'any[]' }]\n    }\n  } else if (path$.isArrayExpression()) {\n    return (path$.get('elements') as NodePath[])\n      .filter((element$) => element$.isIdentifier())\n      .map(getTypeInfo)\n      .filter(isNotNull)\n      .flat()\n  } else if (path$.isTSAsExpression()) {\n    return [\n      {\n        kind: 'expression',\n        imports: [],\n        expression: generate(path$.node.typeAnnotation, { sourceMaps: false })\n          .code,\n      },\n    ]\n  }\n}\n\nfunction toObjectExpressionMap(\n  path$: NodePath,\n): Record<string, NodePath<ObjectMember>> {\n  const map: Record<string, NodePath<ObjectMember>> = {}\n\n  if (path$.isObjectExpression()) {\n    ;(path$.get('properties') as NodePath[]).forEach((property$) => {\n      if (property$.isObjectMember()) {\n        const key = property$.node.key\n\n        if (isIdentifier(key)) {\n          map[key.name] = property$ as any\n        }\n      }\n    })\n  }\n\n  return map\n}\n","import t, {\n  isBlockStatement,\n  isIdentifier,\n  isObjectExpression,\n  isObjectMember,\n  isObjectPattern,\n  isObjectProperty,\n  isReturnStatement,\n  isStringLiteral,\n} from '@babel/types'\nimport { createPlugin } from '../types'\nimport { createSourceRange } from '../utilities'\n\nexport const SetupOptionsAnalyzer = createPlugin({\n  setup: [\n    (node$, context) => {\n      const { node } = node$\n      const [props, setupContext] = node.params\n      if (props != null) {\n        let rest: string | undefined\n        const identifiers: string[] = []\n        if (isObjectPattern(props)) {\n          props.properties.forEach((prop) => {\n            if (isObjectProperty(prop)) {\n              if (isIdentifier(prop.value)) {\n                identifiers.push(prop.value.name)\n              }\n            } else {\n              if (isIdentifier(prop.argument)) {\n                rest = prop.argument.name\n              }\n            }\n          })\n        } else if (isIdentifier(props)) {\n          rest = props.name\n        }\n\n        context.component.addSetup('props', {\n          identifiers,\n          rest,\n          loc: createSourceRange(context, props),\n        })\n      }\n\n      if (setupContext != null) {\n        let rest: string | undefined\n        const identifiers: Partial<{\n          attrs: string\n          slots: string\n          emit: string\n        }> = {}\n\n        if (isObjectPattern(setupContext)) {\n          setupContext.properties.forEach((prop) => {\n            if (isObjectProperty(prop)) {\n              if (isIdentifier(prop.value) && isIdentifier(prop.key)) {\n                identifiers[prop.key.name as 'attrs' | 'slots' | 'emit'] =\n                  prop.value.name\n              }\n            } else {\n              if (isIdentifier(prop.argument)) {\n                rest = prop.argument.name\n              }\n            }\n          })\n        } else if (isIdentifier(setupContext)) {\n          rest = setupContext.name\n        }\n        context.component.addSetup('context', {\n          identifiers,\n          rest,\n          loc: createSourceRange(context, setupContext),\n        })\n      }\n\n      const addSetupSources = (node: t.ObjectExpression): void => {\n        node.properties.forEach((property) => {\n          if (isObjectMember(property)) {\n            if (isIdentifier(property.key)) {\n              context.component.addIdentifier(\n                property.key.name,\n                'setup',\n                createSourceRange(context, property.key),\n              )\n            } else if (isStringLiteral(property.key)) {\n              context.component.addIdentifier(\n                property.key.value,\n                'setup',\n                createSourceRange(context, property.key),\n              )\n            }\n          }\n        })\n      }\n\n      if (isBlockStatement(node.body)) {\n        const returnStatement = node.body.body.find((statement) =>\n          isReturnStatement(statement),\n        ) as t.ReturnStatement\n\n        if (returnStatement?.argument != null) {\n          context.component.addSetup('return', {\n            loc: createSourceRange(context, returnStatement.argument),\n          })\n\n          if (isObjectExpression(returnStatement.argument)) {\n            addSetupSources(returnStatement.argument)\n          }\n        }\n      } else {\n        context.component.addSetup('return', {\n          loc: createSourceRange(context, node.body),\n        })\n\n        if (isObjectExpression(node.body)) {\n          addSetupSources(node.body)\n        }\n      }\n    },\n  ],\n})\n","import { parse } from '@vuedx/compiler-tsx'\nimport {\n  isDirectiveNode,\n  isSimpleExpressionNode,\n  traverse,\n} from '@vuedx/template-ast-types'\nimport { createPlugin } from '../types'\nimport { parseJS } from './ScriptBlockAnalyzer'\n\nexport const TemplateBlockAnalyzer = createPlugin({\n  blocks: {\n    template: (block, ctx) => {\n      if (block.src == null) {\n        const ast = parse(block.content, {\n          onError(error) {\n            if (error.loc != null) {\n              ctx.component.addError(error.message, error.loc.start)\n            }\n          },\n        })\n        const templateExpressionFns = ctx.plugins\n          .map((plugin) => plugin.templateExpression)\n          .filter(Boolean)\n\n        traverse(ast, (node, ancestors) => {\n          if (isSimpleExpressionNode(node)) {\n            if (node.isStatic) return\n            if (templateExpressionFns.length === 0) return\n            const parent = ancestors[ancestors.length - 1]\n            const offset = block.loc.start.offset + node.loc.start.offset\n            const source = `${node.content}`\n\n            if (isDirectiveNode(parent)) {\n              if (parent.exp === node) {\n                if (parent.name === 'for') {\n                  return\n                }\n              }\n            }\n\n            const { ast } = parseJS(ctx, source, false, offset)\n\n            templateExpressionFns.forEach((fn) => {\n              if (fn != null) {\n                try {\n                  fn(ast, ctx)\n                } catch (error) {\n                  console.error(error)\n                }\n              }\n            })\n          }\n        })\n      }\n    },\n  },\n})\n","import { kebabCase } from '@vuedx/shared'\nimport { ComponentInfo } from '../component'\n\nexport interface VeturData {\n  tags: Record<\n    string,\n    {\n      description: string\n      attributes: string[]\n    }\n  >\n  attributes: Record<\n    string,\n    {\n      type: string\n      description: string\n    }\n  >\n}\n\nexport function toVeturData(components: ComponentInfo[]): VeturData {\n  const data: VeturData = { tags: {}, attributes: {} }\n\n  components.forEach((component) => {\n    const name = kebabCase(component.name)\n\n    data.tags[name] = {\n      description: component.description,\n      attributes: [],\n    }\n\n    component.props.forEach((prop) => {\n      const propName = kebabCase(prop.name)\n      data.tags[name].attributes.push(propName)\n      data.attributes[`${name}/${propName}`] = {\n        description: prop.description,\n        type: prop.type\n          .map((type) =>\n            type.kind === 'expression' ? type.expression : type.kind,\n          )\n          .join('|'),\n      }\n    })\n  })\n\n  return data\n}\n","import { ComponentInfo, ImportSource, PropInfo, TypeInfo } from '../component'\n\ntype Source =\n  | {\n      file: string\n      offset: number\n    }\n  | {\n      module?: string\n      symbol: string\n    }\n\ntype Type =\n  | string\n  | {\n      imports: string[]\n      expression: string\n    }\n  | Array<\n      | string\n      | {\n          imports: string[]\n          expression: string\n        }\n    >\n\ntype Value =\n  | {\n      kind: 'no-value'\n    }\n  | {\n      kind: 'string'\n      required: boolean\n    }\n  | {\n      kind: 'number'\n      required: boolean\n    }\n  | {\n      kind: 'boolean'\n      required: boolean\n    }\n  | {\n      kind: 'enum'\n      items: string[]\n      required: boolean\n    }\n  | {\n      kind: 'expression'\n      type: Type\n      required: boolean\n    }\n\ninterface TagAttribute {\n  name: string\n  description: string\n  default?: string\n  required: boolean\n  value: Value\n  'doc-url'?: string\n}\n\ninterface TagEvent {\n  name: string\n  description: string\n  arguments: Array<{\n    name: string\n    description: string\n    type: Type\n    'doc-url'?: string\n  }>\n  'doc-url'?: string\n}\n\ninterface TagSlot {\n  name: string\n  pattern: string | { regex: string; 'case-sensitive': boolean }\n  description: string\n  'doc-url'?: string\n  'vue-properties': Array<{\n    name: string\n    description: string\n    type: Type\n    'doc-url'?: string\n  }>\n}\n\ninterface Tag {\n  name: string\n  aliases: string[]\n  description: string\n  attributes: TagAttribute[]\n  events: TagEvent[]\n  slots: TagSlot[]\n  source: Source\n  'vue-model': Array<{ prop: string; event: string }>\n  'doc-url'?: string\n}\n\ninterface Attribute {\n  name: string\n  aliases: string[]\n  description: string\n  default?: string\n  value: Value\n  'doc-url'?: string\n  'vue-argument': {\n    pattern:\n      | string\n      | {\n          regex: string\n          'case-sensitive': boolean\n        }\n    description: string\n    'doc-url'?: string\n    required: boolean\n  }\n  'vue-modifiers': Array<{\n    name: string\n    pattern: string\n    description: string\n    'doc-url'?: string\n  }>\n}\n\n/**\n * @see http://json.schemastore.org/web-types\n */\nexport interface WebTypes {\n  framework: 'vue'\n  name: string\n  version: string\n  contributions: {\n    'types-syntax': 'typescript'\n    'description-markup': 'html' | 'markdown' | 'none'\n    tags: Tag[]\n    attributes: Attribute[]\n  }\n}\n\nexport function toWebTypes(\n  name: string,\n  version: string,\n  components: ComponentInfo[],\n): WebTypes {\n  const data: WebTypes = {\n    framework: 'vue',\n    name,\n    version,\n    contributions: {\n      'types-syntax': 'typescript',\n      'description-markup': 'markdown',\n      tags: [],\n      attributes: [],\n    },\n  }\n\n  components.forEach((component) => {\n    const tag: Tag = {\n      name: component.name,\n      aliases: component.aliases,\n      description: component.description,\n      attributes: [],\n      events: [],\n      slots: [],\n      'vue-model': [],\n      source: {\n        file: component.fileName,\n        offset: component.options?.loc.start.offset ?? 0,\n      },\n    }\n\n    const emits = new Set<string>()\n\n    component.emits.forEach((emit) => {\n      emits.add(emit.name)\n      tag.events.push({\n        name: emit.name,\n        description: emit.description,\n        arguments: [], // TODO: Get arguments\n      })\n    })\n\n    component.props.forEach((prop) => {\n      tag.attributes.push({\n        name: prop.name,\n        description: prop.description,\n        required: prop.required,\n        default: stringifyDefaultValue(prop.defaultValue),\n        value: toValue(prop.type, prop.required),\n      })\n\n      if (emits.has(`onUpdate:${prop.name}`)) {\n        tag['vue-model'].push({\n          prop: prop.name,\n          event: `onUpdate:${prop.name}`,\n        })\n      }\n    })\n\n    // TODO: Get slots\n\n    data.contributions.tags.push(tag)\n  })\n\n  return data\n}\n\nfunction toValue(typeInfo: TypeInfo[], isRequired: boolean): Value {\n  if (typeInfo.length === 0) {\n    return { kind: 'no-value' }\n  } else if (typeInfo.length === 1) {\n    const info = typeInfo[0]\n    switch (info.kind) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        return { kind: info.kind, required: isRequired }\n      case 'enum':\n        return { kind: info.kind, items: info.values, required: isRequired }\n    }\n  }\n\n  return {\n    kind: 'expression',\n    type: typeInfo.map((type) => {\n      if (type.kind === 'enum') {\n        return type.values.join('|')\n      } else if (type.kind === 'expression') {\n        return {\n          imports: type.imports.map((imp) => stringifyImportSource(imp)),\n          expression: type.expression,\n        }\n      } else {\n        return type.kind\n      }\n    }),\n    required: isRequired,\n  }\n}\n\nfunction stringifyImportSource(imp: ImportSource): string {\n  return imp.exportName != null\n    ? `import { ${\n        imp.exportName !== imp.localName\n          ? `${imp.exportName} as ${imp.localName}`\n          : `${imp.localName}`\n      } } from '${imp.moduleName}`\n    : `import ${imp.localName} from ${imp.moduleName}`\n}\n\nfunction stringifyDefaultValue(\n  info: PropInfo['defaultValue'],\n): string | undefined {\n  if (info == null) return\n  if (info.kind === 'value') return info.value\n  if (info.kind === 'function') return info.expression\n\n  return (\n    info.imports.map((imp) => stringifyImportSource(imp)).join('\\n') +\n    '\\n' +\n    info.expression\n  )\n}\n","import { ComponentRegistrationInfo } from '../../component'\nimport { getComponentName, getComponentNameAliases } from '@vuedx/shared'\nimport { PackageJSON } from './PackageJSON'\nimport Path from 'path'\n\nexport function getComponentFromFile(\n  fileName: string,\n): ComponentRegistrationInfo[] {\n  if (fileName.endsWith('.vue') || fileName.endsWith('.tsx')) {\n    const name = getComponentName(fileName)\n    return [\n      {\n        name,\n        aliases: getComponentNameAliases(fileName),\n        source: {\n          moduleName: fileName,\n          localName: name,\n        },\n      },\n    ]\n  }\n\n  return []\n}\n\nexport function getComponentsFromPackageJSON(\n  rootDir: string,\n  pkg: PackageJSON,\n  require: NodeJS.Require,\n): ComponentRegistrationInfo[] {\n  const components: ComponentRegistrationInfo[] = []\n\n  components.push(\n    ...getComponentsFromVuePackage(\n      getPackageJSON(require, rootDir, 'vue').version,\n    ),\n  )\n\n  const packages = Array.from(\n    new Set([\n      ...Object.keys(pkg.devDependencies),\n      ...Object.keys(pkg.dependencies),\n    ]),\n  )\n\n  packages.forEach((packageName) => {\n    if (packageName === 'vue') {\n      // Already handled.\n    } else if (packageName === 'vue-router') {\n      components.push(\n        ...getComponentsFromVueRouterPackage(\n          getPackageJSON(require, rootDir, 'vue-router').version,\n        ),\n      )\n    } else {\n      components.push(\n        ...getComponentsFromPackage(require, rootDir, packageName),\n      )\n    }\n  })\n\n  return components\n}\n\ninterface ExternalPackage {\n  name: string\n  version: string\n  vetur?: {\n    tags?: string\n  }\n  'web-types'?: string\n}\n\nexport function getPackageJSON(\n  require: NodeJS.Require,\n  rootDir: string,\n  packageName: string,\n): ExternalPackage {\n  try {\n    return requireFileFromPackage(require, packageName, 'package.json', rootDir)\n  } catch (error) {\n    return { name: packageName, version: '3.0.0' }\n  }\n}\n\nconst getPathsCache = new Map<string, string[]>()\nfunction getPaths(dir: string): string[] {\n  if (getPathsCache.has(dir)) {\n    return getPathsCache.get(dir) as string[]\n  }\n\n  const paths: string[] = []\n\n  while (dir !== Path.posix.dirname(dir)) {\n    paths.push(`${dir}/node_modules`)\n\n    dir = Path.posix.dirname(dir)\n  }\n\n  getPathsCache.set(dir, paths)\n\n  return paths\n}\n\nfunction requireFileFromPackage(\n  require: NodeJS.Require,\n  packageName: string,\n  fileName: string,\n  rootDir: string,\n): any {\n  const paths = getPaths(rootDir)\n  const req = Path.posix.resolve(`/${packageName}`, fileName).substr(1)\n  return require(require.resolve(req, { paths }))\n}\n\nexport function getComponentsFromVuePackage(\n  version: string,\n): ComponentRegistrationInfo[] {\n  const components: ComponentRegistrationInfo[] = []\n\n  components.push(\n    {\n      name: 'Component',\n      aliases: ['component', 'Component'],\n      source: {\n        moduleName: 'vue',\n        localName: 'Component',\n        exportName: 'Component',\n      },\n    },\n    {\n      name: 'KeepAlive',\n      aliases: ['keep-alive', 'KeepAlive'],\n      source: {\n        moduleName: 'vue',\n        localName: 'KeepAlive',\n        exportName: 'KeepAlive',\n      },\n    },\n    {\n      name: 'Transition',\n      aliases: ['transition', 'Transition'],\n      source: {\n        moduleName: 'vue',\n        localName: 'Transition',\n        exportName: 'Transition',\n      },\n    },\n    {\n      name: 'TransitionGroup',\n      aliases: ['transition-group', 'TransitionGroup'],\n      source: {\n        moduleName: 'vue',\n        localName: 'TransitionGroup',\n        exportName: 'TransitionGroup',\n      },\n    },\n  )\n\n  if (version.startsWith('3.') || version === 'latest') {\n    components.push(\n      {\n        name: 'Suspense',\n        aliases: ['suspense', 'Suspense'],\n        source: {\n          moduleName: 'vue',\n          localName: 'Suspense',\n          exportName: 'Suspense',\n        },\n      },\n      {\n        name: 'Teleport',\n        aliases: ['teleport', 'Teleport'],\n        source: {\n          moduleName: 'vue',\n          localName: 'Teleport',\n          exportName: 'Teleport',\n        },\n      },\n    )\n  }\n\n  return components\n}\n\nexport function getComponentsFromVueRouterPackage(\n  version: string,\n): ComponentRegistrationInfo[] {\n  const components: ComponentRegistrationInfo[] = []\n\n  components.push(\n    {\n      name: 'RouterLink',\n      aliases: ['router-link', 'RouterLink'],\n      source: {\n        moduleName: 'vue-router',\n        localName: 'RouterLink',\n        exportName: 'RouterLink',\n      },\n    },\n    {\n      name: 'RouterView',\n      aliases: ['router-view', 'RouterView'],\n      source: {\n        moduleName: 'vue-router',\n        localName: 'RouterView',\n        exportName: 'RouterView',\n      },\n    },\n  )\n\n  return components\n}\n\nconst getComponentsFromPackageCache = new Map<\n  string,\n  ComponentRegistrationInfo[]\n>()\nexport function getComponentsFromPackage(\n  require: NodeJS.Require,\n  rootDir: string,\n  packageName: string,\n): ComponentRegistrationInfo[] {\n  const pkg = getPackageJSON(require, rootDir, packageName)\n  const key = `${rootDir}:${packageName}@${pkg.version}`\n  if (getComponentsFromPackageCache.has(key)) {\n    return getComponentsFromPackageCache.get(key) as ComponentRegistrationInfo[]\n  }\n\n  const components: ComponentRegistrationInfo[] = []\n\n  if (pkg['web-types'] != null) {\n    try {\n      const info = requireFileFromPackage(\n        require,\n        packageName,\n        pkg['web-types'],\n        rootDir,\n      ) as PackageWebTypes\n\n      info.contributions?.html?.tags?.forEach((tag) => {\n        const componentName = getComponentName(tag.name)\n        components.push({\n          name: componentName,\n          aliases: getComponentNameAliases(tag.name),\n          source: {\n            moduleName: packageName,\n            localName: componentName,\n            exportName:\n              tag.source?.symbol != null && tag.source?.symbol !== 'default'\n                ? tag.source.symbol\n                : undefined,\n          },\n        })\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  } else if (pkg.vetur?.tags != null) {\n    try {\n      const info = requireFileFromPackage(\n        require,\n        packageName,\n        pkg.vetur.tags,\n        rootDir,\n      ) as PackageVeturInfo\n\n      Object.keys(info).forEach((tag) => {\n        const componentName = getComponentName(tag)\n        components.push({\n          name: componentName,\n          aliases: getComponentNameAliases(tag),\n          source: {\n            moduleName: packageName,\n            localName: componentName,\n            exportName: componentName,\n          },\n        })\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  getComponentsFromPackageCache.set(key, components)\n\n  return components\n}\n\ninterface PackageVeturInfo {\n  [key: string]: {}\n}\n\ninterface PackageWebTypes {\n  contributions?: {\n    html?: {\n      tags?: Array<{\n        name: string\n        source?: {\n          symbol: string\n        }\n      }>\n    }\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare var __non_webpack_require__: any\n\nexport const requireModule = (typeof __non_webpack_require__ !== 'undefined'\n  ? __non_webpack_require__\n  : require) as NodeJS.Require\n","import { ProjectConfig, ProjectConfigNormalized } from '@vuedx/projectconfig'\nimport { ComponentRegistrationInfo } from '../component'\nimport {\n  getComponentFromFile,\n  getComponentsFromPackageJSON,\n  getPackageJSON,\n} from './detector/components'\nimport { PackageJSON } from './detector/PackageJSON'\nimport { requireModule as _require } from './detector/require'\n\nfunction deepDefaults<T extends object>(a: {}, b: T): T\nfunction deepDefaults<T extends object>(a: T, b: Partial<T>): T\nfunction deepDefaults(a: any, b: any): any {\n  Object.keys(b).forEach((key) => {\n    const valueA = a[key]\n    const valueB = b[key]\n\n    if (valueB === undefined) return\n    if (valueA == null || Array.isArray(valueB)) {\n      a[key] = valueB\n    } else if (typeof valueA === 'object' && typeof valueB === 'object') {\n      a[key] = deepDefaults(valueA, valueB)\n    } else {\n      a[key] = valueB\n    }\n  })\n\n  return a\n}\n\nconst DEFAULT_CONFIG: ProjectConfigNormalized = {\n  globalComponents: [],\n  preferences: {\n    componentsDirectories: ['src/components'],\n    script: { mode: 'normal', language: 'js' },\n    style: { language: 'css' },\n    template: {\n      directiveSyntax: 'shorthand',\n      propCase: 'camel',\n      tagCase: 'auto',\n    },\n  },\n}\n\nexport abstract class VueProject {\n  protected isDirty = true\n  protected _globalComponents: ComponentRegistrationInfo[] = []\n  protected _externalComponents: ComponentRegistrationInfo[] = []\n  protected _projectComponents = new Map<string, ComponentRegistrationInfo[]>()\n  protected _fileNames: string[] = []\n  protected _version: string = '3.0.0'\n  protected _config: Readonly<ProjectConfigNormalized> = deepDefaults(\n    {},\n    DEFAULT_CONFIG,\n  )\n\n  public packageJSON: PackageJSON\n\n  constructor(\n    public readonly rootDir: string,\n    public readonly packageFile: string | undefined,\n    packageJSON: Partial<PackageJSON>,\n    protected readonly requireModule: NodeJS.Require = _require,\n  ) {\n    this.packageJSON = { dependencies: {}, devDependencies: {}, ...packageJSON }\n    this.loadVueVersion()\n  }\n\n  public get config(): Readonly<ProjectConfigNormalized> {\n    return this._config\n  }\n\n  public get version(): string {\n    return this._version\n  }\n\n  public setConfig(config: ProjectConfig): void {\n    this._config = deepDefaults<ProjectConfigNormalized>(\n      this._config,\n      config as Partial<ProjectConfigNormalized>,\n    )\n  }\n\n  public markDirty(): void {\n    this.isDirty = true\n  }\n\n  protected loadGlobalComponents(): void {\n    this._externalComponents = getComponentsFromPackageJSON(\n      this.rootDir,\n      this.packageJSON,\n      this.requireModule,\n    )\n\n    const KnownGlobalPackageRE = /^(vue|vue-router)$/\n    this._globalComponents = this._externalComponents.filter((component) =>\n      KnownGlobalPackageRE.test(component.source.moduleName),\n    )\n  }\n\n  abstract kind: 'inferred' | 'configured'\n\n  protected abstract refresh(): void\n\n  protected reloadIfNeeded(): void {\n    if (this.isDirty) {\n      this.loadVueVersion()\n      this.loadGlobalComponents()\n      this.refresh()\n      this.isDirty = false\n    }\n  }\n\n  private loadVueVersion(): void {\n    this._version =\n      getPackageJSON(this.requireModule, this.rootDir, 'vue').version ?? '3.0.0'\n  }\n\n  public setFileNames(fileNames: string[]): void {\n    const newLocalComponents = new Map<string, ComponentRegistrationInfo[]>()\n\n    this._fileNames = fileNames\n    fileNames.forEach((fileName) => {\n      if (fileName.endsWith('.vue')) {\n        newLocalComponents.set(\n          fileName,\n          this._projectComponents.get(fileName) ??\n            getComponentFromFile(fileName),\n        )\n      }\n    })\n\n    this._projectComponents = newLocalComponents\n  }\n\n  public get vueFileNames(): string[] {\n    this.reloadIfNeeded()\n\n    return Array.from(this._projectComponents.keys())\n  }\n\n  public get fileNames(): string[] {\n    return this._fileNames\n  }\n\n  // TODO: Cache this.\n  public get components(): ComponentRegistrationInfo[] {\n    this.reloadIfNeeded()\n\n    return [\n      this._globalComponents,\n      this._externalComponents,\n      ...this._projectComponents.values(),\n    ].flat(2)\n  }\n\n  get globalComponents(): ComponentRegistrationInfo[] {\n    this.reloadIfNeeded()\n\n    return this._globalComponents\n  }\n}\n","import { ProjectConfig } from '@vuedx/projectconfig'\nimport micromatch from 'micromatch'\nimport Path from 'path'\nimport { getComponentName, getComponentNameAliases } from '@vuedx/shared'\nimport {\n  getComponentFromFile,\n  getComponentsFromPackage,\n} from './detector/components'\nimport { PackageJSON } from './detector/PackageJSON'\nimport { VueProject } from './VueProject'\nimport { requireModule as _require } from './detector/require'\n\nexport class ConfiguredVueProject extends VueProject {\n  kind = 'configured' as const\n\n  constructor(\n    rootDir: string,\n    packageFile: string | undefined,\n    packageJSON: Partial<PackageJSON>,\n    public readonly configFile: string,\n    config: Readonly<ProjectConfig>,\n    requireModule: NodeJS.Require = _require,\n  ) {\n    super(rootDir, packageFile, packageJSON, requireModule)\n    this.setConfig(config)\n  }\n\n  public setFileNames(fileNames: string[]): void {\n    super.setFileNames(fileNames)\n    this.markDirty()\n  }\n\n  protected refresh(): void {\n    this.config.globalComponents.forEach((option) => {\n      if (typeof option === 'string') {\n        if (\n          option in this.packageJSON.dependencies ||\n          option in this.packageJSON.devDependencies\n        ) {\n          this._globalComponents.push(\n            ...(this._projectComponents.get(option) ??\n              getComponentsFromPackage(\n                this.requireModule,\n                this.rootDir,\n                option,\n              )),\n          )\n        } else if (option.includes('*') || option.includes('{')) {\n          micromatch.match(this._fileNames, option).forEach((fileName) => {\n            this._globalComponents.push(\n              ...(this._projectComponents.get(fileName) ??\n                getComponentFromFile(fileName)),\n            )\n          })\n        } else {\n          const fileName = Path.posix.resolve(\n            Path.posix.dirname(this.configFile),\n            option,\n          )\n          this._globalComponents.push(\n            ...(this._projectComponents.get(fileName) ??\n              getComponentFromFile(fileName)),\n          )\n        }\n      } else {\n        Object.entries(option).forEach(([name, config]) => {\n          const componentName = getComponentName(name)\n          const id = typeof config === 'string' ? config : config.moduleName\n          const moduleName =\n            id in this.packageJSON.dependencies ||\n            id in this.packageJSON.devDependencies\n              ? id\n              : Path.posix.resolve(Path.posix.dirname(this.configFile), id)\n\n          this._globalComponents.push({\n            name: componentName,\n            aliases: getComponentNameAliases(name),\n            source: {\n              moduleName: moduleName,\n              exportName:\n                typeof config !== 'string' ? config.exportName : undefined,\n              localName: componentName,\n            },\n          })\n        })\n      }\n    })\n  }\n}\n","import { VueProject } from './VueProject'\n\nexport class InferredVueProject extends VueProject {\n  kind = 'inferred' as const\n\n  protected refresh(): void {}\n}\n","import generate from '@babel/generator'\nimport { parse } from '@babel/parser'\nimport * as T from '@babel/types'\n\ninterface FunctionTransformOptions {\n  name?: string\n  kind: 'expression' | 'statement'\n  args: string[]\n  rewrite?:\n    | {\n        context: string\n      }\n    | {\n        refs: string[]\n        props: string[]\n        identifiers: {\n          props: string\n          attrs: string\n          slots: string\n          emit: string\n        }\n      }\n}\n\nexport function transformToFunction(\n  content: string,\n  options: FunctionTransformOptions = {\n    kind: 'expression',\n    args: [],\n  },\n): string {\n  const ast = parse(content, {\n    sourceType: 'module',\n    plugins: [\n      'bigInt',\n      'optionalChaining',\n      'optionalCatchBinding',\n      'nullishCoalescingOperator',\n      'objectRestSpread',\n    ],\n    ranges: true,\n    // @ts-expect-error\n    errorRecovery: true,\n  })\n  const params: Array<\n    T.Identifier | T.Pattern | T.RestElement | T.TSParameterProperty\n  > = options.args.map((id) => T.identifier(id))\n  if (options.kind === 'statement') {\n    if (ast.program.body.length === 1) {\n      const statement = ast.program.body[0]\n      if (T.isExpressionStatement(statement)) {\n        const node = statement.expression\n        if (T.isArrowFunctionExpression(node) || T.isFunctionExpression(node)) {\n          params.push(...node.params)\n          ast.program.body = T.isStatement(node.body)\n            ? [node.body]\n            : [T.expressionStatement(node.body)]\n        }\n      }\n    }\n  }\n\n  if (options.rewrite != null) {\n    const processed = new Set<T.Node>()\n    const knownIdentifiers = new Set(options.args)\n    const rewrite = options.rewrite\n    params.forEach((node) =>\n      T.traverseFast(node, (node) => {\n        if (T.isIdentifier(node)) {\n          knownIdentifiers.add(node.name)\n        }\n      }),\n    )\n    T.traverseFast(ast, (node) => {\n      if (T.isMemberExpression(node)) {\n        processed.add(node.property)\n      } else if (\n        T.isIdentifier(node) &&\n        !processed.has(node) &&\n        !knownIdentifiers.has(node.name)\n      ) {\n        processed.add(node)\n        if ('context' in rewrite) {\n          node.name = `${rewrite.context}.${node.name}`\n        } else if ('refs' in rewrite) {\n          if (rewrite.refs.includes(node.name)) {\n            node.name = `${node.name}.value`\n          } else if (rewrite.props.includes(node.name)) {\n            node.name = `${rewrite.identifiers.props}.${node.name}`\n          } else if (node.name === '$props') {\n            node.name = rewrite.identifiers.props\n          } else if (node.name === '$emit') {\n            node.name = rewrite.identifiers.emit\n          } else if (node.name === '$attrs') {\n            node.name = rewrite.identifiers.attrs\n          } else if (node.name === '$slots') {\n            node.name = rewrite.identifiers.slots\n          }\n        }\n      }\n    })\n  }\n\n  const statements: T.Statement[] = ast.program.body.slice(0, -1)\n  const [lastStatement] = ast.program.body.slice(-1)\n\n  if (lastStatement != null) {\n    if (options.kind === 'expression') {\n      if (T.isExpressionStatement(lastStatement)) {\n        statements.push(T.returnStatement(lastStatement.expression))\n      } else {\n        statements.push(lastStatement)\n      }\n    } else {\n      statements.push(lastStatement)\n    }\n  }\n\n  if (options.name == null) {\n    const code = generate(\n      T.arrowFunctionExpression(params, T.blockStatement(statements)),\n    ).code\n\n    if (params.length === 1 && T.isIdentifier(params[0])) {\n      return code.replace(params[0].name, `(${params[0].name})`)\n    }\n\n    return code\n  } else {\n    return generate(\n      T.functionExpression(\n        T.identifier(options.name),\n        params,\n        T.blockStatement(statements),\n      ),\n    ).code.replace(/^function anonymous/, 'function ')\n  }\n}\n","import { createAnalyzer } from './analyzer'\nimport {\n  ComponentsOptionAnalyzer,\n  EmitsOptionsAnalyzer,\n  PropsOptionsAnalyzer,\n  ScriptBlockAnalyzer,\n  SetupOptionsAnalyzer,\n  ScriptIdentifierSourceAnalyzer,\n  TemplateBlockAnalyzer,\n} from './analyzers'\nimport { Context, Plugin } from './types'\n\nexport { toVeturData, VeturData } from './output/vetur'\nexport { toWebTypes, WebTypes } from './output/web-types'\nexport { Analyzer, createAnalyzer } from './analyzer'\nexport {\n  ScriptBlockAnalyzer,\n  ScriptIdentifierSourceAnalyzer,\n  SetupOptionsAnalyzer,\n  TemplateBlockAnalyzer,\n  ComponentsOptionAnalyzer,\n  EmitsOptionsAnalyzer,\n  PropsOptionsAnalyzer,\n  ImplicitEmitsAnalyzer,\n} from './analyzers'\nexport {\n  ComponentInfo,\n  PropInfo,\n  EmitInfo,\n  SetupInfo,\n  TypeInfo,\n  ScriptSetupInfo,\n  SourceRange,\n  IdentifierSource,\n  SyntaxError,\n  ImportSource,\n  ImportSourceWithLocation,\n  ComponentRegistrationInfo,\n  LocalComponentRegistrationInfo,\n} from './component'\nexport { ConfiguredVueProject } from './project/ConfiguredVueProject'\nexport { InferredVueProject } from './project/InferredVueProject'\nexport { VueProject } from './project/VueProject'\nexport { transformToFunction } from './transforms'\nexport { Plugin } from './types'\nexport { createSourceRange } from './utilities'\n\nexport function createFullAnalyzer(\n  plugins: Plugin[] = [],\n  options: Partial<Context['parsers']> = {},\n): ReturnType<typeof createAnalyzer> {\n  plugins.push(\n    ScriptBlockAnalyzer,\n    TemplateBlockAnalyzer,\n    ComponentsOptionAnalyzer,\n    EmitsOptionsAnalyzer,\n    PropsOptionsAnalyzer,\n    SetupOptionsAnalyzer,\n    ScriptIdentifierSourceAnalyzer,\n  )\n  return createAnalyzer(plugins, options)\n}\n"],"names":["getComponentName","parse","getTypeInfo","traverse","requireModule","_require","T.identifier","T.isExpressionStatement","T.isArrowFunctionExpression","T.isFunctionExpression","T.isStatement","T.expressionStatement","T.traverseFast","T.isIdentifier","T.isMemberExpression","T.returnStatement","T.arrowFunctionExpression","T.blockStatement","T.functionExpression"],"mappings":"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"}